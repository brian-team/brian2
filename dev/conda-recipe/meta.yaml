package:
  name: brian2
  version: "2.2.1"

build:
  number: 0
  script: python -m pip install --no-deps --ignore-installed . --install-option=--with-cython --install-option=--fail-on-error

requirements:
  build:
    - {{ compiler('cxx') }}
  host:
    - python
    - cython >=0.29
    - setuptools >=6.0
    # we build against the oldest supported numpy version
    - numpy 1.10  # [not py36]
    - numpy 1.11  # [py36]
  run:
    - python
    # we don't need the same version as during the build, newer versions are
    # still ABI-compatible
    - numpy >=1.10  # [not py36]
    - numpy >=1.11  # [py36]
    - sympy >=0.7.6,!=1.1.0
    - pyparsing
    - scipy >=0.13.3
    - weave  # [py2k]
    - bsddb  # [py2k and not win]
    - gsl >1.15
    - cython >=0.29
    - jinja2 >=2.7
    - setuptools >=6.0
    - py-cpuinfo  # [win]

test:
  imports:
    - brian2
    - brian2.codegen
    - brian2.codegen.generators
    - brian2.codegen.runtime
    - brian2.codegen.runtime.cython_rt
    - brian2.codegen.runtime.numpy_rt
    - brian2.codegen.runtime.weave_rt
    - brian2.core
    - brian2.devices
    - brian2.devices.cpp_standalone
    - brian2.equations
    - brian2.groups
    - brian2.input
    - brian2.memory
    - brian2.monitors
    - brian2.parsing
    - brian2.spatialneuron
    - brian2.sphinxext
    - brian2.stateupdaters
    - brian2.synapses
    - brian2.tests
    - brian2.tests.features
    - brian2.units
    - brian2.utils

  commands:
    # Run a simple test that uses some of the main simulation elements
    - 'python -c "from brian2.tests.test_synapses import test_transmission_simple; test_transmission_simple()"'

  requires:
    - nose

about:
  home: http://www.briansimulator.org/
  dev_url: https://github.com/brian-team/brian2
  doc_url: http://brian2.readthedocs.io/
  license: CeCILL-2.1
  license_file: LICENSE
  summary: 'A clock-driven simulator for spiking neural networks'
  description: |
    Brian2 is a simulator for spiking neural networks available on almost all platforms.
    The motivation for this project is that a simulator should not only save the time of
    processors, but also the time of scientists.

    It is the successor of Brian1 and shares its approach of being highly flexible
    and easily extensible. It is based on a code generation framework that allows
    to execute simulations using other programming languages and/or on different
    devices.

source:
  path: ../..
