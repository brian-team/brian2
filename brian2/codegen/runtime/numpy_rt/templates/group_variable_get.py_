{# Note that we use this template only for subexpressions -- for normal arrays
   we do not generate any code but simply access the data in the underlying
   array directly. See RuntimeDevice.get_with_array #}
{# USES_VARIABLES { _group_idx } #}
{% extends 'common_group.py_' %}

{% block maincode %}

# scalar code
_vectorisation_idx = 1
{{scalar_code|autoindent}}

# vector code
_idx = {{_group_idx}}
_vectorisation_idx = _idx

{{vector_code|autoindent}}

# _variable is set in the abstract code, see Group._get_with_array
_return_values = _variable
{% endblock %}
