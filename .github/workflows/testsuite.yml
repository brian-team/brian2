name: TestSuite

on: [push, pull_request]

jobs:
  get_python_versions:
    name: "Determine Python versions"
    runs-on: ubuntu-latest
    outputs:
      min-python: ${{ steps.nep29.outputs.min-python }}
      max-python: ${{ steps.nep29.outputs.max-python }}
    steps:
      - name: "calculate versions according to NEP29"
        id: nep29
        uses: mstimberg/github-calc-nep29@a73481e4e8488a5fa0b3be70a385cc5206a261ba # v0.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  pre-commit:
    name: Run linters with pre-commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          persist-credentials: false
      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: .devcontainer/dev-requirements.txt
      - name: Install deps
        run: pip3 install -r .devcontainer/dev-requirements.txt
      - name: Run pre-commit hooks
        run: pre-commit run --all-files --show-diff-on-failure

  testing:
    needs: [get_python_versions, pre-commit]
    name: "Python ${{ matrix.python-version }} on ${{ matrix.os.image }} (standalone: ${{ matrix.standalone }}, 32bit: ${{ matrix.float_dtype_32 }})"
    runs-on: ${{ matrix.os.image }}
    strategy:
      fail-fast: false
      matrix:
        os: [{image: ubuntu-24.04, triplet: x64-linux}]
        standalone: [false]
        float_dtype_32: [false]
        python-version: ["${{ needs.get_python_versions.outputs.max-python }}"]

    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          persist-credentials: false      
      - name: Install Python
        id: python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          cache: 'pip'
          python-version: ${{ matrix.python-version }}
      - name: Install Brian2 and dependencies
        env:
          PYTHON_BINARY: ${{ steps.python.outputs.python-path }}
        run: |
          "$PYTHON_BINARY" -m pip install .[test]
      
      - name: Determine Cython cache dir
        id: cython-cache
        run: |
          CACHE_DIR=$(python -c 'from brian2.codegen.runtime.cython_rt.extension_manager import get_cython_cache_dir; print(get_cython_cache_dir())')
          echo "Cython cache dir: $CACHE_DIR"
          echo "cachedir=$CACHE_DIR" >> "$GITHUB_OUTPUT"

      - name: restore Cython cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        if: ${{ ! matrix.standalone }}
        with:
          key: cython-extensions-${{ matrix.os.image }}-${{ matrix.python-version }}-32bit-${{ matrix.float_dtype_32 }}
          path: ${{ steps.cython-cache.outputs.cachedir }}

      - name: Run Tests      
        run: |
          cd  $GITHUB_WORKSPACE/.. && \
          "$PYTHON_BINARY" $GITHUB_WORKSPACE/$SCRIPT_NAME && \
          cp coverage.xml $GITHUB_WORKSPACE/
        env:
          SCRIPT_NAME: dev/continuous-integration/run_test_suite.py
          SPHINX_DIR: ${{ github.workspace }}/docs_sphinx
          AGENT_OS: ${{runner.os}}
          STANDALONE: ${{ matrix.standalone }}
          FLOAT_DTYPE_32: ${{ matrix.float_dtype_32 }}
          PYTHON_BINARY: ${{ steps.python.outputs.python-path }}
          DO_NOT_RESET_PREFERENCES: true  # Make sure that GSL setting is used


  test_doc_build:
    needs: get_python_versions
    name: Test building the documentation
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      with:
        fetch-depth: 0
        persist-credentials: false
        submodules: true

    - name: Setup Conda and Python
      uses: conda-incubator/setup-miniconda@835234971496cad1653abb28a638a281cf32541f # v3.2.0
      with:
        conda-remove-defaults: true
        auto-update-conda: true
        auto-activate-base: false
        miniforge-version: latest
        activate-environment: 'test_env'
        python-version: "${{ needs.get_python_versions.outputs.max-python }}"

    - name: Install dependencies
      run: pip install -r rtd-requirements.txt

    - name: Install brian2
      run: pip install .

    - name: Build HTML documentation
      run: |
        cd docs_sphinx
        sphinx-build -b html . ../docs
      env:
        READTHEDOCS: True
